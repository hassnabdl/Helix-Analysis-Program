      subroutine makeamsol(n,c,iatnum,nneig,ineig,iqcol1,iqcol2,line,
     -  index,indexn,inpcrdtyp,nconfig,iout,maxng,maxrec)
      dimension c(3,n),iatnum(n),nneig(n),ineig(maxng,n),
     -  index(n),indexn(n)
      character* 132 line(maxrec)
      character*2 iatnm2
      common /atnam/ aw(99),nval(99),nvalmax(99),mmofan(99),
     -  mmatno(64),iatnm2(99)
      character*5 crdext
      common /iotypes/ iocha,iochaex,iobpdb,iocpdb,ioa3pdb,ioa4pdb,
     -  iommod,iommc,iommc4,iogro,iomol2,iomae,iocif,ioxxx,ioins,
     -  ionxyz,iosxyz,iosxyzrq,iograsp,iofull,lext(19),crdext(19)
      print *,'Generating Amsol 3.5 input config no=',nconfig
c     Obtain charges (if available)
      iqsum=0
      if (iqcol1 .gt. 0) then
        qsum=0.0
        do ia=1,n
          call readreal(line(index(ia)),iqcol1,iqcol2,qslt)
          qsum=qsum+qslt
        end do
        if (qsum .gt.  0.0) iqsum=qsum+0.1
        if (qsum .lt.  0.0) iqsum=qsum-0.1
        print *,'Total charge on the molecule is assumed to be ',iqsum,
     -  ' CHECK!'
      else
        call getint('The charge on the molecule',26,999999,1,0,iqsum,0)
      end if
c     Obtain SM1A atomtypes
      do i=1,n
        indexn(i)=99
      end do
      do i=1,n
        if (nneig(i) .gt. 0) then
          if (iatnum(i) .eq. 1) then
            if (iatnum(ineig(1,i)) .eq. 6) indexn(i)=1
            if (iatnum(ineig(1,i)) .eq. 7) indexn(i)=2
            if (iatnum(ineig(1,i)) .eq. 8) indexn(i)=3
            if (iatnum(ineig(1,i)) .eq. 16) indexn(i)=4
            if (iatnum(ineig(1,i)) .eq. 15) indexn(i)=14
          else if (iatnum(i) .eq. 6) then
            indexn(i)=1
          else if (iatnum(i) .eq. 7) then
            if (nneig(i) .ge. 3) indexn(i)=5
            if (nneig(i) .le. 2) indexn(i)=6
          else if (iatnum(i) .eq. 8) then
            if (nneig(i) .eq. 1) indexn(i)=8
            if (nneig(i) .eq. 2) indexn(i)=7
          else if (iatnum(i) .eq. 9) then
            indexn(i)=9
          else if (iatnum(i) .eq. 16) then
            indexn(i)=10
          else if (iatnum(i) .eq. 17) then
            indexn(i)=11
          else if (iatnum(i) .eq. 35) then
            indexn(i)=12
          else if (iatnum(i) .eq. 53) then
            indexn(i)=13
          else if (iatnum(i) .eq. 15) then
            indexn(i)=14
          end if
        end if
      end do
      nunknown=0
      do i=1,n
        if (indexn(i) .eq. 99) nunknown=nunknown+1
      end do
      if (nunknown .gt. 0)
     -  print *,'WARNING: ',nunknown,' atoms have no SM1A type'
      write (iout,2049) iqsum
c     Write header
      do i=1,2
        if (ischarmm(inpcrdtyp) .eq. 1 .and. line(i)(1:1) .eq. '*')
     -    call writeline(iout,line(i),2,81,0)
        if ((ispdb(inpcrdtyp) .gt. 0) .and.
     -    (line(i)(1:6) .eq. 'REMARK' .or. line(i)(1:6) .eq. 'HEADER'))
     -       call writeline(iout,line(i),8,87,0)
        if (inpcrdtyp .eq. iommod .and. i .eq. 1) then
           call writeline(iout,line(i),7,86,0)
           call writeline(iout,line(i),87,132,0)
        end if
        if (inpcrdtyp .ge. ioins)
     -    write (iout,*)'Input generated by Simulaid'
      end do
c     Write coordinates
      write (iout,2050) (iatnm2(iatnum(i)),(c(k,i),k=1,3),i=1,n)
      write (iout,*)
      write (iout,1005) (indexn(i),i=1,n)
      close (iout)
      return
1005  format(i3)
2049  format('AM1 SM1A T=20000 1SCF XYZ CHARGE=',i2)
2050  format((a5,3(f10.5,' 0')))
      end
